TYPES {
    void
    uchar
    int
    float
    string
}
DECLARATIONS {
    class className {
        def className constructor(arguments) {
            // initialize everything here
            return this;
        }
        def void destructor() {
            // destroy everything if needed
        }
    }
    struct structName
    def returnType functionName
}
KEYWORDS {
    sizeof
    return
}
CONDITIONS {
    if ()
    while ()
}
SPECIAL (examples) {
    // only uchar is a valid type for a switch case
    uchar myVariable = 31;
    switch (myVariable) {
        case 2:
            doSomething();
        case 1:
            doSomethingCommonForOneAndTwo();
            break;
        default:
            doGenericAction();
    }
    // return a pointer to the object (which is implicitly destroyed after calling uninit)
    new objectType(arguments);
    newArray objectType[length](arguments);
    newArray objectType[3]((arguments for object 1), (arguments for object 2), (arguments for object 3));
    // destroy the pointed object and set the pointer to nullptr
    delete objectName;
    deleteArray objectName;
}
CONSTANTS {
    'c' ==> uchar
    "some string" ==> string
    123 ==> int
    123. ==> float
}
OVERRIDES {
    true => <uchar> 1
    false => <uchar> 0
    LEFT => <uchar>
    RIGHT => <uchar>
    UP => <uchar>
    DOWN => <uchar>
    nullptr => <void *> 0
}
Implicit declarations {
    class {
        Menu() {
        }
        MenuBase() {
            def int addDependency(Dependency dep) {}
            def Dep *modifyDependency(int id) {}
            def void setRatio(float ratio) {}
            private {
                float x1;
                float x2;
                float y1;
                float y2;
            }
        }
        Image(MenuBase) {
            def constructor() {}
            def destructor() {}
        }
        Text(Color color) {
        }
        Button {
            def void constructor() {}
            def void destructor() {}
            def void onClic() {}
        }
    }

    {
    struct Dep {
            MenuBase *master;
            float relX;
            float relY;
            uchar alignFrom;
            uchar alignTo;
        }
        Color {
            uchar r;
            uchar g;
            uchar b;
            uchar a;
        }
    }

    uchar {
        debug;
        debugLayer;
        writeLog;
    }

    def {
        // redefinable function
        void init()
        // redefinable function
        void uninit()
    }
}
